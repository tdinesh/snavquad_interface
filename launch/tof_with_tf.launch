<?xml version="1.0"?>

<!--
/****************************************************************************
 * Copyright 2019 Modal AI
 * Complete TOF launch file exposes all node params as arguments
 ****************************************************************************/
-->


<launch>

  <arg name="mav_name" default="$(optenv MAV_NAME)"/>

  <!-- transforms to tilt TOF points and laser scan forward -->
  <!-- assumes TOF points forward -->
  <node   pkg="tf2_ros"
          type="static_transform_publisher"
          name="base_link_tof_cam"
          args="0.06353 -0.025 -0.006 -1.570796 0 -1.570796 base_link hal3_tof_camera" />

  <!-- transforms to tilt TOF points and laser scan forward -->
  <node   pkg="tf2_ros"
          type="static_transform_publisher"
          name="base_link_laser_scan"
          args="0.0 0.0 0.0 3.14159 0.0 0.0 base_link laser_scan" />


  <!-- Arguments for customizing TOF behavior -->
  <arg name="namespace" default="tof" />
  <arg name="cam_id" default="$(optenv TOF_CAM_ID)" />
  <arg name="frame_rate" default="5" />
  <arg name="auto_exposure" default="false" />
  <arg name="exposure_time" default="800" />

  <!-- scan width only affects the laser scan topic. Sets the lens FOV -->
  <!-- 96 for Sunny wide lens, 62 for Infineon IRS1645C family -->
  <arg name="scan_width_degrees" default="96" />

  <!-- line of the 2D image to publish as single line laser scan topic -->
  <!-- from 1 at top to 172 at bottom. Default in the middle -->
  <arg name="laser_scan_line" default="86" />

  <!-- Enable/disable publishing of available data types. Right now any topic
  enabled is calculated even if not subscribed.
  The exception is ir_image_mode which disables the depth image,
  point cloud, and laser scan computation and only publishes IR image.
  ir_image can still be published with the other types with ir_image_mode
  disabled.  -->
  <arg name="ir_image_mode" default="false" />
  <arg name="publish_ir_image" default="true" />
  <arg name="publish_point_cloud" default="true" />
  <arg name="publish_depth_image" default="true" />
  <arg name="publish_laser_scan" default="true" />

  <!-- start tof_cam node with all arguments -->
  <group ns="$(arg mav_name)/$(arg namespace)">
    <!--<node name="tof_cam_ros_node" type="tof_cam_ros_node" pkg="tof_cam_ros" output="screen"> -->
    <node name="voxl_hal3_tof_cam_ros_node" type="voxl_hal3_tof_cam_ros_node" pkg="voxl_hal3_tof_cam_ros" output="screen">
      <param name="camera_id" value="$(arg cam_id)" />
      <param name="frame_rate" value="$(arg frame_rate)" />
      <param if="$(arg auto_exposure)" name="auto_exposure" value="1" />
      <param unless="$(arg auto_exposure)" name="auto_exposure" value="0" />
      <param unless="$(arg auto_exposure)" name="exposure_time" value="$(arg exposure_time)"/>
      <param name="scan_width_degrees" value="$(arg scan_width_degrees)" />
      <param name="laser_scan_line" value="$(arg laser_scan_line)" />
      <param name="ir_image_mode" value="$(arg ir_image_mode)" />
      <param name="publish_ir_image" value="$(arg publish_ir_image)" />
      <param name="publish_point_cloud" value="$(arg publish_point_cloud)" />
      <param name="publish_depth_image" value="$(arg publish_depth_image)" />
      <param name="publish_laser_scan" value="$(arg publish_laser_scan)" />
      <!-- for now and to stay compatible with older version, we keep the images upside down -->
      <param name="flip_image" value="false" />

      <remap from="~voxl_ir_image_raw" to="voxl_ir_image_raw"/>
      <remap from="~voxl_depth_image_raw" to="voxl_depth_image_raw"/>
      <remap from="~voxl_point_cloud" to="voxl_point_cloud"/>
      <remap from="~voxl_laser_scan" to="voxl_laser_scan"/>
    </node>
  </group>

</launch>

